ICS 53 Lab 7
Remember you are not allowed to write any code until you start your scheduled lab time-slot.
You may use any of the functions defined in string.h or ctype.h.
You may use my stack or queue in ~klefstad/public/{stk,que} if you like.
1. Write a program that is a chatroom server. Each server runs on a host and listens for clientroom connections on a specific port. Make up a port number by combining two digits from the lower 4 of each of your student ID numbers.  The server must keep a list of chatters in the room.  When any chatter sends a message, that message, with the username of the person who sent it, should be broadcast to all others in the chatroom. You will use Internet Domain Stream sockets.  You will call socket(), listen(), bind(), accept(), read(), write(), select(). Note you use select() to decide which IO channel has input ready to read.  You may select from any one of many open socket connections. Have you figured out how to do any of these things at the same time: a)  read something said by any user connected to this chat room and b) accept new connections from clients wishing to join the chat room?
2. Write a program that is a chatroom client.  Chatters run the client program passing in three arguments: username, host, and port.  Use reasonable defaults for host and port for your program that work with your chatroom server above. The chatroom client will print a message whenever a new chatter joins “<username> has joined the chatroom” whenever a chatter leaves “<username> has left the chatroom” or whenever a user posts a comment “<username>: Hi everyone!  I’m in ICS 53 and learning how to write network programs!”  You will call socket(), connect(), read(), write(), and select().  Note you use select() to read from either the socket connected to the server or from the user entering a message to the chat room client standard input.
Possible chatroom protocol:
ENTER <username>
SAY <username> <one line message>
LEAVE <username>
(Remember, you solve both problems above.  Each correct program is worth 50% of your lab grade for this week.  Each parner in the team gets the same score for the submission.  Each team must have something working they can demo to their TA before the end of their lab Tuesday.  The full program may be completed the same day or may be solved and submitted before the end of your lab on Thursday for full credit of 100%.  Each team member must be present in their lab during submission to receive credit for their lab problem.  If an odd number show up for lab, the last person must work solo.  If another person comes to lab late, they must join with any solo to form a group.)